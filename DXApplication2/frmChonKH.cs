using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;
using DevExpress.Utils.Menu;
using DevExpress.XtraGrid.Columns;
using DevExpress.XtraGrid.Views.Grid;
using DevExpress.XtraGrid.Views.Grid.ViewInfo;

namespace DXApplication2
{
    public partial class frmChonKH : DevExpress.XtraEditors.XtraForm
    {
        private String searchItem;
        private String MaKH;
        private String TenKH;
        public frmChonKH()
        {
            InitializeComponent();
            DXPopupMenu menu = new DXPopupMenu();
            menu.Items.Add(new DXMenuItem("Tên khách hàng"));
            menu.Items.Add(new DXMenuItem("Số điện thoại"));
            menu.Items.Add(new DXMenuItem("Địa chỉ"));
            menu.Items.Add(new DXMenuItem("Mã số thuế"));
            this.btnLoaiTimKiem.DropDownControl = menu;
            // subscribe item.Click event
            foreach (DXMenuItem item in menu.Items)
            {
                item.Click += item_Click;
            }
            btnLoaiTimKiem.Text = menu.Items[0].Caption;
            searchItem = "TenKH";
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            DXApplication2.quanlycuahangEntities dbContext = new DXApplication2.quanlycuahangEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.khachhangs.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                khachhangsBindingSource.DataSource = dbContext.khachhangs.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }


        void item_Click(object sender, EventArgs e)
        {
            // synchronize selection
            btnLoaiTimKiem.Text = ((DXMenuItem)sender).Caption;
            switch (((DXMenuItem)sender).Caption)
            {
                case "Tên khách hàng":
                    searchItem = "TenKH";
                    break;
                case "Số điện thoại":
                    searchItem = "SDT";
                    break;
                case "Địa chỉ":
                    searchItem = "DiaChi";
                    break;
                case "Mã số thuế":
                    searchItem = "MST";
                    break;
            }
        }

        public String[] getResult()
        {
            return new List<string> { MaKH, TenKH }.ToArray(); ;
        }

        private void textEdit1_EditValueChanged(object sender, EventArgs e)
        {
            gridView1.Columns[searchItem].FilterInfo =
                            new ColumnFilterInfo(searchItem + " LIKE '%" + this.textEdit1.Text + "%' ");
        }

        private void btnSua_Click(object sender, EventArgs e)
        {
            this.MaKH = gridView1.GetRowCellValue(gridView1.GetSelectedRows()[0], "MaKH").ToString();
            this.TenKH = gridView1.GetRowCellValue(gridView1.GetSelectedRows()[0], "TenKH").ToString();
            this.Close();
        }

        private void gridView1_DoubleClick(object sender, EventArgs e)
        {
            GridView view = (GridView)sender;
            Point pt = view.GridControl.PointToClient(Control.MousePosition);
            DoRowDoubleClick(view, pt);
        }

        private void DoRowDoubleClick(GridView view, Point pt)
        {
            GridHitInfo info = view.CalcHitInfo(pt);
            if (info.InRow || info.InRowCell)
            {
                this.MaKH = gridView1.GetRowCellValue(gridView1.GetSelectedRows()[0], "MaKH").ToString();
                this.TenKH = gridView1.GetRowCellValue(gridView1.GetSelectedRows()[0], "TenKH").ToString();
                this.Close();
            }
        }
    }
}